// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class BiosBuyBack extends ethereum.Event {
  get params(): BiosBuyBack__Params {
    return new BiosBuyBack__Params(this);
  }
}

export class BiosBuyBack__Params {
  _event: BiosBuyBack;

  constructor(event: BiosBuyBack) {
    this._event = event;
  }
}

export class ClaimBiosRewards extends ethereum.Event {
  get params(): ClaimBiosRewards__Params {
    return new ClaimBiosRewards__Params(this);
  }
}

export class ClaimBiosRewards__Params {
  _event: ClaimBiosRewards;

  constructor(event: ClaimBiosRewards) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get biosRewards(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ClaimEthRewards extends ethereum.Event {
  get params(): ClaimEthRewards__Params {
    return new ClaimEthRewards__Params(this);
  }
}

export class ClaimEthRewards__Params {
  _event: ClaimEthRewards;

  constructor(event: ClaimEthRewards) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get strategies(): Array<BigInt> {
    return this._event.parameters[1].value.toBigIntArray();
  }

  get ethRewards(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Deploy extends ethereum.Event {
  get params(): Deploy__Params {
    return new Deploy__Params(this);
  }
}

export class Deploy__Params {
  _event: Deploy;

  constructor(event: Deploy) {
    this._event = event;
  }
}

export class DistributeEth extends ethereum.Event {
  get params(): DistributeEth__Params {
    return new DistributeEth__Params(this);
  }
}

export class DistributeEth__Params {
  _event: DistributeEth;

  constructor(event: DistributeEth) {
    this._event = event;
  }
}

export class EthDistributionWeightsUpdated extends ethereum.Event {
  get params(): EthDistributionWeightsUpdated__Params {
    return new EthDistributionWeightsUpdated__Params(this);
  }
}

export class EthDistributionWeightsUpdated__Params {
  _event: EthDistributionWeightsUpdated;

  constructor(event: EthDistributionWeightsUpdated) {
    this._event = event;
  }

  get biosBuyBackEthWeight(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get treasuryEthWeight(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get protocolFeeEthWeight(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get rewardsEthWeight(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class GasAccountTargetEthBalanceUpdated extends ethereum.Event {
  get params(): GasAccountTargetEthBalanceUpdated__Params {
    return new GasAccountTargetEthBalanceUpdated__Params(this);
  }
}

export class GasAccountTargetEthBalanceUpdated__Params {
  _event: GasAccountTargetEthBalanceUpdated;

  constructor(event: GasAccountTargetEthBalanceUpdated) {
    this._event = event;
  }

  get gasAccountTargetEthBalance(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class GasAccountUpdated extends ethereum.Event {
  get params(): GasAccountUpdated__Params {
    return new GasAccountUpdated__Params(this);
  }
}

export class GasAccountUpdated__Params {
  _event: GasAccountUpdated;

  constructor(event: GasAccountUpdated) {
    this._event = event;
  }

  get gasAccount(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class HarvestYield extends ethereum.Event {
  get params(): HarvestYield__Params {
    return new HarvestYield__Params(this);
  }
}

export class HarvestYield__Params {
  _event: HarvestYield;

  constructor(event: HarvestYield) {
    this._event = event;
  }
}

export class IntegrationAdded extends ethereum.Event {
  get params(): IntegrationAdded__Params {
    return new IntegrationAdded__Params(this);
  }
}

export class IntegrationAdded__Params {
  _event: IntegrationAdded;

  constructor(event: IntegrationAdded) {
    this._event = event;
  }

  get contractAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get name(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class SeedBiosRewards extends ethereum.Event {
  get params(): SeedBiosRewards__Params {
    return new SeedBiosRewards__Params(this);
  }
}

export class SeedBiosRewards__Params {
  _event: SeedBiosRewards;

  constructor(event: SeedBiosRewards) {
    this._event = event;
  }

  get biosAmount(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class SetBiosRewardsDuration extends ethereum.Event {
  get params(): SetBiosRewardsDuration__Params {
    return new SetBiosRewardsDuration__Params(this);
  }
}

export class SetBiosRewardsDuration__Params {
  _event: SetBiosRewardsDuration;

  constructor(event: SetBiosRewardsDuration) {
    this._event = event;
  }

  get biosRewardsDuration(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class TokenAdded extends ethereum.Event {
  get params(): TokenAdded__Params {
    return new TokenAdded__Params(this);
  }
}

export class TokenAdded__Params {
  _event: TokenAdded;

  constructor(event: TokenAdded) {
    this._event = event;
  }

  get tokenAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get acceptingDeposits(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }

  get acceptingWithdrawals(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }

  get acceptingLping(): boolean {
    return this._event.parameters[3].value.toBoolean();
  }

  get acceptingBridging(): boolean {
    return this._event.parameters[4].value.toBoolean();
  }

  get biosRewardWeight(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get reserveRatioNumerator(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get targetLiquidityRatioNumerator(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get transferFeeKValueNumerator(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }

  get transferFeePlatformRatioNumerator(): BigInt {
    return this._event.parameters[9].value.toBigInt();
  }
}

export class TreasuryAccountUpdated extends ethereum.Event {
  get params(): TreasuryAccountUpdated__Params {
    return new TreasuryAccountUpdated__Params(this);
  }
}

export class TreasuryAccountUpdated__Params {
  _event: TreasuryAccountUpdated;

  constructor(event: TreasuryAccountUpdated) {
    this._event = event;
  }

  get treasuryAccount(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Withdraw extends ethereum.Event {
  get params(): Withdraw__Params {
    return new Withdraw__Params(this);
  }
}

export class Withdraw__Params {
  _event: Withdraw;

  constructor(event: Withdraw) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokens(): Array<Address> {
    return this._event.parameters[1].value.toAddressArray();
  }

  get tokenAmounts(): Array<BigInt> {
    return this._event.parameters[2].value.toBigIntArray();
  }

  get ethAmount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class WithdrawAllAndClaim extends ethereum.Event {
  get params(): WithdrawAllAndClaim__Params {
    return new WithdrawAllAndClaim__Params(this);
  }
}

export class WithdrawAllAndClaim__Params {
  _event: WithdrawAllAndClaim;

  constructor(event: WithdrawAllAndClaim) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokens(): Array<Address> {
    return this._event.parameters[1].value.toAddressArray();
  }

  get strategies(): Array<BigInt> {
    return this._event.parameters[2].value.toBigIntArray();
  }

  get withdrawWethAsEth(): boolean {
    return this._event.parameters[3].value.toBoolean();
  }

  get tokenAmounts(): Array<BigInt> {
    return this._event.parameters[4].value.toBigIntArray();
  }

  get ethWithdrawn(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get ethRewards(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get biosRewards(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }
}

export class Kernel__claimAllRewardsResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class Kernel__withdrawAllAndClaimResult {
  value0: Array<BigInt>;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;

  constructor(
    value0: Array<BigInt>,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigIntArray(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    return map;
  }
}

export class Kernel extends ethereum.SmartContract {
  static bind(address: Address): Kernel {
    return new Kernel("Kernel", address);
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  LIQUIDITY_PROVIDER_ROLE(): Bytes {
    let result = super.call(
      "LIQUIDITY_PROVIDER_ROLE",
      "LIQUIDITY_PROVIDER_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_LIQUIDITY_PROVIDER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "LIQUIDITY_PROVIDER_ROLE",
      "LIQUIDITY_PROVIDER_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  MANAGER_ROLE(): Bytes {
    let result = super.call("MANAGER_ROLE", "MANAGER_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_MANAGER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("MANAGER_ROLE", "MANAGER_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  OWNER_ROLE(): Bytes {
    let result = super.call("OWNER_ROLE", "OWNER_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_OWNER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("OWNER_ROLE", "OWNER_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  claimAllRewards(strategies: Array<BigInt>): Kernel__claimAllRewardsResult {
    let result = super.call(
      "claimAllRewards",
      "claimAllRewards(uint256[]):(uint256,uint256)",
      [ethereum.Value.fromUnsignedBigIntArray(strategies)]
    );

    return new Kernel__claimAllRewardsResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_claimAllRewards(
    strategies: Array<BigInt>
  ): ethereum.CallResult<Kernel__claimAllRewardsResult> {
    let result = super.tryCall(
      "claimAllRewards",
      "claimAllRewards(uint256[]):(uint256,uint256)",
      [ethereum.Value.fromUnsignedBigIntArray(strategies)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Kernel__claimAllRewardsResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  claimBiosRewards(): BigInt {
    let result = super.call(
      "claimBiosRewards",
      "claimBiosRewards():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_claimBiosRewards(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "claimBiosRewards",
      "claimBiosRewards():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  claimEthRewards(strategies: Array<BigInt>): BigInt {
    let result = super.call(
      "claimEthRewards",
      "claimEthRewards(uint256[]):(uint256)",
      [ethereum.Value.fromUnsignedBigIntArray(strategies)]
    );

    return result[0].toBigInt();
  }

  try_claimEthRewards(strategies: Array<BigInt>): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "claimEthRewards",
      "claimEthRewards(uint256[]):(uint256)",
      [ethereum.Value.fromUnsignedBigIntArray(strategies)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getEthRewardsTimePeriod(): BigInt {
    let result = super.call(
      "getEthRewardsTimePeriod",
      "getEthRewardsTimePeriod():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getEthRewardsTimePeriod(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getEthRewardsTimePeriod",
      "getEthRewardsTimePeriod():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getLastBiosBuyBackTimestamp(): BigInt {
    let result = super.call(
      "getLastBiosBuyBackTimestamp",
      "getLastBiosBuyBackTimestamp():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getLastBiosBuyBackTimestamp(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getLastBiosBuyBackTimestamp",
      "getLastBiosBuyBackTimestamp():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getLastDeployTimestamp(): BigInt {
    let result = super.call(
      "getLastDeployTimestamp",
      "getLastDeployTimestamp():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getLastDeployTimestamp(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getLastDeployTimestamp",
      "getLastDeployTimestamp():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getLastDistributeEthTimestamp(): BigInt {
    let result = super.call(
      "getLastDistributeEthTimestamp",
      "getLastDistributeEthTimestamp():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getLastDistributeEthTimestamp(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getLastDistributeEthTimestamp",
      "getLastDistributeEthTimestamp():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getLpWhitelistEnabled(): boolean {
    let result = super.call(
      "getLpWhitelistEnabled",
      "getLpWhitelistEnabled():(bool)",
      []
    );

    return result[0].toBoolean();
  }

  try_getLpWhitelistEnabled(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "getLpWhitelistEnabled",
      "getLpWhitelistEnabled():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getRoleMember(role: Bytes, index: BigInt): Address {
    let result = super.call(
      "getRoleMember",
      "getRoleMember(bytes32,uint256):(address)",
      [
        ethereum.Value.fromFixedBytes(role),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );

    return result[0].toAddress();
  }

  try_getRoleMember(role: Bytes, index: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getRoleMember",
      "getRoleMember(bytes32,uint256):(address)",
      [
        ethereum.Value.fromFixedBytes(role),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getRoleMemberCount(role: Bytes): BigInt {
    let result = super.call(
      "getRoleMemberCount",
      "getRoleMemberCount(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(role)]
    );

    return result[0].toBigInt();
  }

  try_getRoleMemberCount(role: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getRoleMemberCount",
      "getRoleMemberCount(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isLiquidityProvider(account: Address): boolean {
    let result = super.call(
      "isLiquidityProvider",
      "isLiquidityProvider(address):(bool)",
      [ethereum.Value.fromAddress(account)]
    );

    return result[0].toBoolean();
  }

  try_isLiquidityProvider(account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isLiquidityProvider",
      "isLiquidityProvider(address):(bool)",
      [ethereum.Value.fromAddress(account)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isManager(account: Address): boolean {
    let result = super.call("isManager", "isManager(address):(bool)", [
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_isManager(account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isManager", "isManager(address):(bool)", [
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isOwner(account: Address): boolean {
    let result = super.call("isOwner", "isOwner(address):(bool)", [
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_isOwner(account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isOwner", "isOwner(address):(bool)", [
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  moduleMap(): Address {
    let result = super.call("moduleMap", "moduleMap():(address)", []);

    return result[0].toAddress();
  }

  try_moduleMap(): ethereum.CallResult<Address> {
    let result = super.tryCall("moduleMap", "moduleMap():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  withdrawAllAndClaim(
    tokens: Array<Address>,
    strategies: Array<BigInt>,
    withdrawWethAsEth: boolean
  ): Kernel__withdrawAllAndClaimResult {
    let result = super.call(
      "withdrawAllAndClaim",
      "withdrawAllAndClaim(address[],uint256[],bool):(uint256[],uint256,uint256,uint256)",
      [
        ethereum.Value.fromAddressArray(tokens),
        ethereum.Value.fromUnsignedBigIntArray(strategies),
        ethereum.Value.fromBoolean(withdrawWethAsEth)
      ]
    );

    return new Kernel__withdrawAllAndClaimResult(
      result[0].toBigIntArray(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt()
    );
  }

  try_withdrawAllAndClaim(
    tokens: Array<Address>,
    strategies: Array<BigInt>,
    withdrawWethAsEth: boolean
  ): ethereum.CallResult<Kernel__withdrawAllAndClaimResult> {
    let result = super.tryCall(
      "withdrawAllAndClaim",
      "withdrawAllAndClaim(address[],uint256[],bool):(uint256[],uint256,uint256,uint256)",
      [
        ethereum.Value.fromAddressArray(tokens),
        ethereum.Value.fromUnsignedBigIntArray(strategies),
        ethereum.Value.fromBoolean(withdrawWethAsEth)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Kernel__withdrawAllAndClaimResult(
        value[0].toBigIntArray(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt()
      )
    );
  }
}

export class AddIntegrationCall extends ethereum.Call {
  get inputs(): AddIntegrationCall__Inputs {
    return new AddIntegrationCall__Inputs(this);
  }

  get outputs(): AddIntegrationCall__Outputs {
    return new AddIntegrationCall__Outputs(this);
  }
}

export class AddIntegrationCall__Inputs {
  _call: AddIntegrationCall;

  constructor(call: AddIntegrationCall) {
    this._call = call;
  }

  get contractAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get name(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class AddIntegrationCall__Outputs {
  _call: AddIntegrationCall;

  constructor(call: AddIntegrationCall) {
    this._call = call;
  }
}

export class AddTokenCall extends ethereum.Call {
  get inputs(): AddTokenCall__Inputs {
    return new AddTokenCall__Inputs(this);
  }

  get outputs(): AddTokenCall__Outputs {
    return new AddTokenCall__Outputs(this);
  }
}

export class AddTokenCall__Inputs {
  _call: AddTokenCall;

  constructor(call: AddTokenCall) {
    this._call = call;
  }

  get tokenAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get acceptingDeposits(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }

  get acceptingWithdrawals(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }

  get acceptingLping(): boolean {
    return this._call.inputValues[3].value.toBoolean();
  }

  get acceptingBridging(): boolean {
    return this._call.inputValues[4].value.toBoolean();
  }

  get biosRewardWeight(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get reserveRatioNumerator(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get targetLiquidityRatioNumerator(): BigInt {
    return this._call.inputValues[7].value.toBigInt();
  }

  get transferFeeKValueNumerator(): BigInt {
    return this._call.inputValues[8].value.toBigInt();
  }

  get transferFeePlatformRatioNumerator(): BigInt {
    return this._call.inputValues[9].value.toBigInt();
  }
}

export class AddTokenCall__Outputs {
  _call: AddTokenCall;

  constructor(call: AddTokenCall) {
    this._call = call;
  }
}

export class BiosBuyBackCall extends ethereum.Call {
  get inputs(): BiosBuyBackCall__Inputs {
    return new BiosBuyBackCall__Inputs(this);
  }

  get outputs(): BiosBuyBackCall__Outputs {
    return new BiosBuyBackCall__Outputs(this);
  }
}

export class BiosBuyBackCall__Inputs {
  _call: BiosBuyBackCall;

  constructor(call: BiosBuyBackCall) {
    this._call = call;
  }

  get ratioX1000(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class BiosBuyBackCall__Outputs {
  _call: BiosBuyBackCall;

  constructor(call: BiosBuyBackCall) {
    this._call = call;
  }
}

export class ClaimAllRewardsCall extends ethereum.Call {
  get inputs(): ClaimAllRewardsCall__Inputs {
    return new ClaimAllRewardsCall__Inputs(this);
  }

  get outputs(): ClaimAllRewardsCall__Outputs {
    return new ClaimAllRewardsCall__Outputs(this);
  }
}

export class ClaimAllRewardsCall__Inputs {
  _call: ClaimAllRewardsCall;

  constructor(call: ClaimAllRewardsCall) {
    this._call = call;
  }

  get strategies(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }
}

export class ClaimAllRewardsCall__Outputs {
  _call: ClaimAllRewardsCall;

  constructor(call: ClaimAllRewardsCall) {
    this._call = call;
  }

  get ethClaimed(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }

  get biosClaimed(): BigInt {
    return this._call.outputValues[1].value.toBigInt();
  }
}

export class ClaimBiosRewardsCall extends ethereum.Call {
  get inputs(): ClaimBiosRewardsCall__Inputs {
    return new ClaimBiosRewardsCall__Inputs(this);
  }

  get outputs(): ClaimBiosRewardsCall__Outputs {
    return new ClaimBiosRewardsCall__Outputs(this);
  }
}

export class ClaimBiosRewardsCall__Inputs {
  _call: ClaimBiosRewardsCall;

  constructor(call: ClaimBiosRewardsCall) {
    this._call = call;
  }
}

export class ClaimBiosRewardsCall__Outputs {
  _call: ClaimBiosRewardsCall;

  constructor(call: ClaimBiosRewardsCall) {
    this._call = call;
  }

  get biosClaimed(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class ClaimEthRewardsCall extends ethereum.Call {
  get inputs(): ClaimEthRewardsCall__Inputs {
    return new ClaimEthRewardsCall__Inputs(this);
  }

  get outputs(): ClaimEthRewardsCall__Outputs {
    return new ClaimEthRewardsCall__Outputs(this);
  }
}

export class ClaimEthRewardsCall__Inputs {
  _call: ClaimEthRewardsCall;

  constructor(call: ClaimEthRewardsCall) {
    this._call = call;
  }

  get strategies(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }
}

export class ClaimEthRewardsCall__Outputs {
  _call: ClaimEthRewardsCall;

  constructor(call: ClaimEthRewardsCall) {
    this._call = call;
  }

  get ethClaimed(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class ClaimLpFeesCall extends ethereum.Call {
  get inputs(): ClaimLpFeesCall__Inputs {
    return new ClaimLpFeesCall__Inputs(this);
  }

  get outputs(): ClaimLpFeesCall__Outputs {
    return new ClaimLpFeesCall__Outputs(this);
  }
}

export class ClaimLpFeesCall__Inputs {
  _call: ClaimLpFeesCall;

  constructor(call: ClaimLpFeesCall) {
    this._call = call;
  }

  get tokens(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class ClaimLpFeesCall__Outputs {
  _call: ClaimLpFeesCall;

  constructor(call: ClaimLpFeesCall) {
    this._call = call;
  }
}

export class DeployCall extends ethereum.Call {
  get inputs(): DeployCall__Inputs {
    return new DeployCall__Inputs(this);
  }

  get outputs(): DeployCall__Outputs {
    return new DeployCall__Outputs(this);
  }
}

export class DeployCall__Inputs {
  _call: DeployCall;

  constructor(call: DeployCall) {
    this._call = call;
  }

  get deployments(): Array<DeployCallDeploymentsStruct> {
    return this._call.inputValues[0].value.toTupleArray<
      DeployCallDeploymentsStruct
    >();
  }
}

export class DeployCall__Outputs {
  _call: DeployCall;

  constructor(call: DeployCall) {
    this._call = call;
  }
}

export class DeployCallDeploymentsStruct extends ethereum.Tuple {
  get integration(): Address {
    return this[0].toAddress();
  }

  get tokens(): Array<Address> {
    return this[1].toAddressArray();
  }

  get ammPoolID(): BigInt {
    return this[2].toBigInt();
  }
}

export class DepositCall extends ethereum.Call {
  get inputs(): DepositCall__Inputs {
    return new DepositCall__Inputs(this);
  }

  get outputs(): DepositCall__Outputs {
    return new DepositCall__Outputs(this);
  }
}

export class DepositCall__Inputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }

  get tokens(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get amounts(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class DepositCall__Outputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }
}

export class DisableLpWhitelistCall extends ethereum.Call {
  get inputs(): DisableLpWhitelistCall__Inputs {
    return new DisableLpWhitelistCall__Inputs(this);
  }

  get outputs(): DisableLpWhitelistCall__Outputs {
    return new DisableLpWhitelistCall__Outputs(this);
  }
}

export class DisableLpWhitelistCall__Inputs {
  _call: DisableLpWhitelistCall;

  constructor(call: DisableLpWhitelistCall) {
    this._call = call;
  }
}

export class DisableLpWhitelistCall__Outputs {
  _call: DisableLpWhitelistCall;

  constructor(call: DisableLpWhitelistCall) {
    this._call = call;
  }
}

export class DistributeEthCall extends ethereum.Call {
  get inputs(): DistributeEthCall__Inputs {
    return new DistributeEthCall__Inputs(this);
  }

  get outputs(): DistributeEthCall__Outputs {
    return new DistributeEthCall__Outputs(this);
  }
}

export class DistributeEthCall__Inputs {
  _call: DistributeEthCall;

  constructor(call: DistributeEthCall) {
    this._call = call;
  }

  get strategies(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get positions(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get biosAmount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class DistributeEthCall__Outputs {
  _call: DistributeEthCall;

  constructor(call: DistributeEthCall) {
    this._call = call;
  }
}

export class EnableLpWhitelistCall extends ethereum.Call {
  get inputs(): EnableLpWhitelistCall__Inputs {
    return new EnableLpWhitelistCall__Inputs(this);
  }

  get outputs(): EnableLpWhitelistCall__Outputs {
    return new EnableLpWhitelistCall__Outputs(this);
  }
}

export class EnableLpWhitelistCall__Inputs {
  _call: EnableLpWhitelistCall;

  constructor(call: EnableLpWhitelistCall) {
    this._call = call;
  }
}

export class EnableLpWhitelistCall__Outputs {
  _call: EnableLpWhitelistCall;

  constructor(call: EnableLpWhitelistCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get admin_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get owner_(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get manager_(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get liquidityProvider_(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get moduleMap_(): Address {
    return this._call.inputValues[4].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class ProvideLiquidityCall extends ethereum.Call {
  get inputs(): ProvideLiquidityCall__Inputs {
    return new ProvideLiquidityCall__Inputs(this);
  }

  get outputs(): ProvideLiquidityCall__Outputs {
    return new ProvideLiquidityCall__Outputs(this);
  }
}

export class ProvideLiquidityCall__Inputs {
  _call: ProvideLiquidityCall;

  constructor(call: ProvideLiquidityCall) {
    this._call = call;
  }

  get tokens(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get amounts(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class ProvideLiquidityCall__Outputs {
  _call: ProvideLiquidityCall;

  constructor(call: ProvideLiquidityCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class TakeLiquidityCall extends ethereum.Call {
  get inputs(): TakeLiquidityCall__Inputs {
    return new TakeLiquidityCall__Inputs(this);
  }

  get outputs(): TakeLiquidityCall__Outputs {
    return new TakeLiquidityCall__Outputs(this);
  }
}

export class TakeLiquidityCall__Inputs {
  _call: TakeLiquidityCall;

  constructor(call: TakeLiquidityCall) {
    this._call = call;
  }

  get tokens(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get amounts(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class TakeLiquidityCall__Outputs {
  _call: TakeLiquidityCall;

  constructor(call: TakeLiquidityCall) {
    this._call = call;
  }
}

export class TokenApprovalsCall extends ethereum.Call {
  get inputs(): TokenApprovalsCall__Inputs {
    return new TokenApprovalsCall__Inputs(this);
  }

  get outputs(): TokenApprovalsCall__Outputs {
    return new TokenApprovalsCall__Outputs(this);
  }
}

export class TokenApprovalsCall__Inputs {
  _call: TokenApprovalsCall;

  constructor(call: TokenApprovalsCall) {
    this._call = call;
  }
}

export class TokenApprovalsCall__Outputs {
  _call: TokenApprovalsCall;

  constructor(call: TokenApprovalsCall) {
    this._call = call;
  }
}

export class UpdateEthDistributionWeightsCall extends ethereum.Call {
  get inputs(): UpdateEthDistributionWeightsCall__Inputs {
    return new UpdateEthDistributionWeightsCall__Inputs(this);
  }

  get outputs(): UpdateEthDistributionWeightsCall__Outputs {
    return new UpdateEthDistributionWeightsCall__Outputs(this);
  }
}

export class UpdateEthDistributionWeightsCall__Inputs {
  _call: UpdateEthDistributionWeightsCall;

  constructor(call: UpdateEthDistributionWeightsCall) {
    this._call = call;
  }

  get biosBuyBackEthWeight(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get treasuryEthWeight(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get protocolFeeEthWeight(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get rewardsEthWeight(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class UpdateEthDistributionWeightsCall__Outputs {
  _call: UpdateEthDistributionWeightsCall;

  constructor(call: UpdateEthDistributionWeightsCall) {
    this._call = call;
  }
}

export class UpdateGasAccountCall extends ethereum.Call {
  get inputs(): UpdateGasAccountCall__Inputs {
    return new UpdateGasAccountCall__Inputs(this);
  }

  get outputs(): UpdateGasAccountCall__Outputs {
    return new UpdateGasAccountCall__Outputs(this);
  }
}

export class UpdateGasAccountCall__Inputs {
  _call: UpdateGasAccountCall;

  constructor(call: UpdateGasAccountCall) {
    this._call = call;
  }

  get gasAccount(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateGasAccountCall__Outputs {
  _call: UpdateGasAccountCall;

  constructor(call: UpdateGasAccountCall) {
    this._call = call;
  }
}

export class UpdateGasAccountTargetEthBalanceCall extends ethereum.Call {
  get inputs(): UpdateGasAccountTargetEthBalanceCall__Inputs {
    return new UpdateGasAccountTargetEthBalanceCall__Inputs(this);
  }

  get outputs(): UpdateGasAccountTargetEthBalanceCall__Outputs {
    return new UpdateGasAccountTargetEthBalanceCall__Outputs(this);
  }
}

export class UpdateGasAccountTargetEthBalanceCall__Inputs {
  _call: UpdateGasAccountTargetEthBalanceCall;

  constructor(call: UpdateGasAccountTargetEthBalanceCall) {
    this._call = call;
  }

  get gasAccountTargetEthBalance(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateGasAccountTargetEthBalanceCall__Outputs {
  _call: UpdateGasAccountTargetEthBalanceCall;

  constructor(call: UpdateGasAccountTargetEthBalanceCall) {
    this._call = call;
  }
}

export class UpdateTreasuryAccountCall extends ethereum.Call {
  get inputs(): UpdateTreasuryAccountCall__Inputs {
    return new UpdateTreasuryAccountCall__Inputs(this);
  }

  get outputs(): UpdateTreasuryAccountCall__Outputs {
    return new UpdateTreasuryAccountCall__Outputs(this);
  }
}

export class UpdateTreasuryAccountCall__Inputs {
  _call: UpdateTreasuryAccountCall;

  constructor(call: UpdateTreasuryAccountCall) {
    this._call = call;
  }

  get treasuryAccount(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateTreasuryAccountCall__Outputs {
  _call: UpdateTreasuryAccountCall;

  constructor(call: UpdateTreasuryAccountCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get tokens(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get amounts(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get withdrawWethAsEth(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}

export class WithdrawAllAndClaimCall extends ethereum.Call {
  get inputs(): WithdrawAllAndClaimCall__Inputs {
    return new WithdrawAllAndClaimCall__Inputs(this);
  }

  get outputs(): WithdrawAllAndClaimCall__Outputs {
    return new WithdrawAllAndClaimCall__Outputs(this);
  }
}

export class WithdrawAllAndClaimCall__Inputs {
  _call: WithdrawAllAndClaimCall;

  constructor(call: WithdrawAllAndClaimCall) {
    this._call = call;
  }

  get tokens(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get strategies(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get withdrawWethAsEth(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }
}

export class WithdrawAllAndClaimCall__Outputs {
  _call: WithdrawAllAndClaimCall;

  constructor(call: WithdrawAllAndClaimCall) {
    this._call = call;
  }

  get tokenAmounts(): Array<BigInt> {
    return this._call.outputValues[0].value.toBigIntArray();
  }

  get ethWithdrawn(): BigInt {
    return this._call.outputValues[1].value.toBigInt();
  }

  get ethClaimed(): BigInt {
    return this._call.outputValues[2].value.toBigInt();
  }

  get biosClaimed(): BigInt {
    return this._call.outputValues[3].value.toBigInt();
  }
}
